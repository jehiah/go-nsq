name: tests

on:
  push:         {branches: [master]}
  pull_request: {branches: [master]}

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        imgtag:
          - "golang:1.23-bullseye"
          - "golang:1.24-bullseye"
        goarch:
          - "amd64"
        nsq_ver:
          - "nsq-1.1.0.linux-amd64.go1.10.3"
          - "nsq-1.2.0.linux-amd64.go1.12.9"
          - "nsq-1.2.1.linux-amd64.go1.16.6"
          - "nsq-1.3.0.linux-amd64.go1.21.5"
        include:
          # test 386 only against latest version of NSQ
          - imgtag: "golang:1.24-bullseye"
            goarch: "386"
            nsq_ver: "nsq-1.3.0.linux-amd64.go1.21.5"
          
    container: "${{matrix.imgtag}}"
    env:
      GOPATH: "${{github.workspace}}/go"
      GOARCH: "${{matrix.goarch}}"
      SRCDIR: "go/src/github.com/nsqio/go-nsq"

    steps:
      - uses: actions/checkout@v2
        with:
          path: ${{env.SRCDIR}}

      - name: download NSQ
        run: |
          cd ${{env.SRCDIR}}
          curl -sSL "http://bitly-downloads.s3.amazonaws.com/nsq/${{matrix.nsq_ver}}.tar.gz" \
                    | tar -xzv --strip-components=1

      - name: test
        run: |
          cd ${{env.SRCDIR}}
          export PATH=bin:$PATH
          ./test.sh
